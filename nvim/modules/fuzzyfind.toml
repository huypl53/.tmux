# Vim-clap is a modern generic interactive finder and dispatcher, 
# based on the newly feature: floating_win of neovim or popup of vim.
# The goal of vim-clap is to work everywhere out of the box, with fast response.
[[plugins]]
repo = 'liuchengxu/vim-clap'
merged = 0
build = 'bash install.sh'
on_map = { n = '<Plug>' }
hook_source = '''
    let s:zshrc = expand($HOME . '/.zshrc')
    let s:tmux_conf = expand($HOME . '/.tmux.conf')
    let g:clap_cache_directory = $DATA_PATH . '/clap'
    let g:clap_theme = 'material_design_dark'
    let g:clap_current_selection_sign= { 'text': 'âž¤', 'texthl': "ClapCurrentSelectionSign", "linehl": "ClapCurrentSelection"}
    let g:clap_layout = { 'relative': 'editor' }
    let g:clap_enable_icon = 1
    let g:clap_search_box_border_style = 'curve'
    let g:clap_provider_grep_enable_icon = 1
    let g:clap_prompt_format = '%spinner%%forerunner_status% %provider_id%: '
    let g:clap_provider_personalconf = {
          \ 'source': [s:zshrc,s:tmux_conf],
          \ 'sink': 'e',
          \ }

    " A funtion to config highlight of ClapSymbol
    " when the background color is opactiy
    function! s:ClapSymbolHL() abort
        let s:current_bgcolor = synIDattr(hlID("Normal"), "bg")
        if s:current_bgcolor == ''
            hi ClapSymbol guibg=NONE ctermbg=NONE
        endif
    endfunction

    autocmd User ClapOnEnter call s:ClapSymbolHL()
'''

[[plugins]]
repo = 'vn-ki/coc-clap'
on_source = 'vim-clap'


[[plugins]]
repo = 'brooth/far.vim'
hook_source = '''
	set lazyredraw            " improve scrolling performance when navigating through large results
	set regexpengine=1        " use old regexp engine
	set ignorecase smartcase  " ignore case only when the pattern contains no capital letters
	let g:far#prompt_mapping = {
        \ 'quit'           : { 'key' : '<esc>', 'prompt' : 'Esc' },
        \ 'regex'          : { 'key' : '<C-x>', 'prompt' : '^X'  },
        \ 'case_sensitive' : { 'key' : '<C-a>', 'prompt' : '^A'  },
        \ 'word'           : { 'key' : '<C-w>', 'prompt' : "^W"  },
        \ 'substitute'     : { 'key' : '<C-f>', 'prompt' : '^F'  },
        \ }
'''
